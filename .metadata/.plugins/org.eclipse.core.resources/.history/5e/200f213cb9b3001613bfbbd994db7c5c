package crawlData;

import java.util.ArrayList;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import helperMethod.HelperMethod;

public class CrawlDanTri {
	
	HelperMethod helper = new HelperMethod();

	/*
	 * Danh sách các link chủ đề
	 */
	public ArrayList<String> addUrl() {
		ArrayList<String> URLs = new ArrayList<String>();
		URLs.add("http://dantri.com.vn/the-gioi.htm");
//		URLs.add("http://dantri.com.vn/suc-khoe.htm");
//		URLs.add("http://dantri.com.vn/kinh-doanh.htm");
//		URLs.add("http://dantri.com.vn/the-thao.htm");
//		URLs.add("http://dantri.com.vn/suc-manh-so/dien-thoai.htm");
		return URLs;
	}
	
	/*
	 * 
	 * Lấy tất cả các link tin tức trong link chủ đề
	 * 
	 * Output: biến trả ra danh sách các link tin tức thuộc chủ đề
	 * 
	 */
	public ArrayList<String> getLinksDanTri() {
		ArrayList<String> URLs = addUrl();
		ArrayList<String> link = new ArrayList<String>();
		for (String url : URLs) {
			try {
				// Lay het noi dung HTML cua trang co URL = currentURL
				Document doc = Jsoup.connect(url).data("query", "Java").userAgent("Mozilla").cookie("auth", "token")
						.timeout(50000).get();

				// Lay cac element la div trong doc
				Elements forms = doc.getElementsByTag("form");
				// Duyệt qua từng element
				for (Element form : forms) {
					if(form.attr("name").trim().equals("aspnetForm")){
						Elements aspnetForms = form.children();
						for(Element aspnetForm : aspnetForms){
							if(aspnetForm.attr("class").trim().equals("wrapper") && aspnetForm.tagName().trim().equals("div")){
								Elements wrappers = aspnetForm.children();
								for(Element wrapper : wrappers){
									if(wrapper.attr("class").trim().equals("container") && wrapper.tagName().trim().equals("div")){
										Elements containers = wrapper.children();
										for(Element container : containers){
											if(container.attr("class").trim().equals("clearfix") && container.tagName().trim().equals("div")){
												Elements clearfixs = container.children();
												for(Element clearfix : clearfixs){
													if(clearfix.attr("class").trim().equals("fl wid470") && clearfix.tagName().trim().equals("div")){
														Elements wid470s = clearfix.children();
														for(Element wid470 : wid470s){
															//Lấy link trong div class mt3 clearfix
															if(wid470.attr("class").trim().equals("mt3 clearfix") && wid470.tagName().equals("div")){
																Elements mt3s = wid470.children();
																for(Element mt3 : mt3s){
																	//Lấy link trong thẻ a
																	if(mt3.tagName().trim().equals("a")){
																		link.add("http://dantri.com.vn" + mt3.attr("href"));
																	}
																	//Lấy link trong thẻ mr1
																	if(mt3.attr("class").trim().equals("mr1") && mt3.tagName().trim().equals("div")){
																		Elements mr1s = mt3.children();
																		for(Element mr1 : mr1s){
																			if(mr1.attr("class").trim().equals("fon5 wid255 fl") && mr1.tagName().trim().equals("div")){
																				Elements wid255s = mr1.children();
																				for(Element wid255 : wid255s){
																					if(wid255.tagName().trim().equals("a")){
																						link.add("http://dantri.com.vn" + wid255.attr("href"));
																					}
																				}
																			}
																		}
																	}
																}
															}
															//Lấy link trong div class clearfix
															if(wid470.attr("class").trim().equals("clearfix") && wid470.tagName().equals("div")){
																Elements clearfixs1 = wid470.children();
																for(Element clearfix1: clearfixs1){
																	if(clearfix1.attr("class").trim().equals("mt3 clearfix eplcheck") && clearfix1.tagName().trim().equals("div")){
																		Elements mt3s = clearfix1.children();
																		for(Element mt3 : mt3s){
																			//Lấy link trong a
																			if(mt3.tagName().trim().equals("a")){
																				link.add("http://dantri.com.vn" + mt3.attr("href"));
																			}
																			//Lấy link trong thẻ mr1
																			if(mt3.attr("class").trim().equals("mr1") && mt3.tagName().trim().equals("div")){
																				Elements mr1s = mt3.children();
																				for(Element mr1 : mr1s){
																					if(mr1.attr("class").trim().equals("fon5 wid324 fl") && mr1.tagName().trim().equals("div")){
																						Elements wid324s = mr1.children();
																						for(Element wid324 : wid324s){
																							if(wid324.tagName().trim().equals("a")){
																								link.add("http://dantri.com.vn" + wid324.attr("href"));
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		//Loại bỏ những link trùng nhau
		for(int i = 0; i < link.size(); i++){
			int j = i + 1;
			while(j < link.size()){
				if(link.get(i).equals(link.get(j))){
					link.remove(j);
				}
				j++;
			}
		}
		return link;
	}
	
	/*
	 * Hàm lấy nội dung tin tức và trả về 1 mảng
	 * input: link - link của tin tức cần lấy
	 * output: mảng chứa các nội dung tin tức. Trong đó:
	 * 		Phần tử 0 là Tiêu đề (Title) tin
	 * 		Phần tử 1 là thời gian (Time) đăng tin
	 * 		Phần tử 2 là đoạn tóm tắt (Summary) tin
	 * 		Phần tử 3 là nội dung của cả bài báo
	 * */
	public ArrayList<String> getContentDantri(String link) {
		ArrayList<String> row = new ArrayList<>();
		//Nhập các giá trị vào biến tạm, do khi lấy thì Time sẽ đc add vào phần tử 0 thay vì 1 như mặc định output
		ArrayList<String> tmp = new ArrayList<>();
		// Tạo biến lưu giữ nội dung bài báo
		String content = "";
		try {
			// Lay het noi dung HTML cua trang co URL = currentURL
			Document doc = Jsoup.connect(link).data("query", "Java").userAgent("Mozilla").cookie("auth", "token")
					.timeout(50000).get();

			// Lay cac element la div trong doc
			Elements elements = doc.getElementsByTag("div");
			for(Element div : elements){
				if(div.attr("class").trim().equals("wrapper") && div.tagName().equals("div")){
					Elements wrappers = div.children();
					for(Element wrapper : wrappers){
						if(wrapper.attr("class").trim().equals("container") && wrapper.tagName().equals("div")){
							Elements containers = wrapper.children();
							for(Element container : containers){
								if(container.attr("class").trim().equals("clearfix") && container.tagName().equals("div")){
									Elements clearfixs = container.children();
									for(Element clearfix : clearfixs){
										if(clearfix.attr("class").trim().equals("fl wid470") && clearfix.tagName().equals("div")){
											Elements wid470s = clearfix.children();
											for(Element wid470 : wid470s){
												if(wid470.attr("id").trim().equals("ctl00_IDContent_Tin_Chi_Tiet") && wid470.tagName().equals("div")){
													Elements ct100s = wid470.children();
													for(Element ct100 : ct100s){
														if(ct100.attr("class").trim().equals("clearfix") && ct100.tagName().equals("div")){
															Elements divContents = ct100.children();
															for(Element divContent : divContents){
																//Lấy title
																if(divContent.attr("class").trim().equals("fon31 mgb15") && divContent.tagName().equals("h1")){
																	System.out.println(divContent.text().trim().replace("\u00a0", " ") + " \r\n");
																	tmp.add(divContent.text().trim().replace("\u00a0", " ") + " \r\n");
																}
																//Lấy time
																if(divContent.attr("class").trim().equals("box26 clearfix") && divContent.tagName().equals("div")){
																	Elements box26s = divContent.children();
																	for(Element box26 : box26s){
																		if(box26.attr("class").trim().equals("fr fon7 mr2 tt-capitalize") && box26.tagName().equals("span")){
																			String[] a = box26.text().trim().split("\\s+");
																			System.out.println(a[2]);
																			tmp.add(a[2].replace("\u00a0", " ") + " \r\n");
																		}
																	}
																}
																//Lấy sub-title
																if(divContent.attr("class").trim().equals("fon33 mt1 sapo") && divContent.tagName().equals("h2")){
																	System.out.println(divContent.text().trim().replace("\u00a0", " ") + " \r\n");
																	tmp.add(divContent.ownText().trim().replace("\u00a0", " ") + " \r\n");
																}
																//Lấy content
																if(divContent.attr("id").trim().equals("divNewsContent") && divContent.tagName().equals("div")){
																	Elements divNewsContents = divContent.children();
																	for(Element divNewsContent : divNewsContents){
																		int noImg = 0;
																		//Lấy hình ảnh và phụ đề hình ảnh
																		if(divNewsContent.attr("type").trim().equals("Photo") && divNewsContent.tagName().equals("p")){
																			//Lấy hình ảnh
																			Element photo = divNewsContent.child(0);
																			Element img = divNewsContent.child(0);
																			String fileName = link.replace(":", ".").replace("/", ".") + "_" + noImg;
																			helper.getImage(img.attr("src").trim(), "dantri", fileName);
																			content = content.trim() + "img=" + fileName  + " \r\n";
																			//Lấy phụ đề hình ảnh
																			Element subPhoto = divNewsContent.child(1);
																		}
																		//Lấy nội dung báo
																		if(divNewsContent.tagName().equals("p")){
																			if(divNewsContent.text().trim().length() > 1){
																				System.out.println(divNewsContent.text().trim().replace("\u00a0", " ") + " \r\n");
																				content = content.trim() + divNewsContent.text().replace("\u00a0", " ") + " \r\n";
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		if (content == "") {
			content = "N/A";
		}
		//Thêm Title vào row. title đc lấy từ fần tử thứ nhất của biếng tmp
		row.add(tmp.get(1).trim());
		//Thêm Time vào row. title đc lấy từ fần tử thứ 0 của biếng tmp
		row.add(tmp.get(0).trim());
		//Thêm Sub-title vào row. title đc lấy từ fần tử thứ 2 của biếng tmp
		row.add(tmp.get(2).trim());
		row.add(content.trim());
		return row;
	}
}
